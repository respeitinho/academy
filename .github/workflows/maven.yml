# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
#  push:
#    branches: [ "main" ]
#  pull_request:
#    branches: [ "main" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'List of environments available'
        required: true
        default: Test
        type: choice
        options:
          - Test
          - Prod
      tag:
        description: 'Image tag name'
        required: false


env:
  tag_name:  'academy'
  image_name: 'docker-image'
  artifact_name: 'artifact'

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: academy
          POSTGRES_PASSWORD: academy
          POSTGRES_DB: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        uses: ./.github/actions/maven_build

      - name: Docker run
        uses: ./.github/actions/docker_build
        with:
          tag_name: $tag_name
          image_name: $image_name

      - name: Save image to a file
        run: |
          docker save -o ${{env.image_name}}.tar ${{env.image_name}}:${{env.tag_name}}
      - uses: actions/upload-artifact@v4
        with:
          name: ${{env.artifact_name}}
          path: ${{env.image_name}}.tar

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.USERNAME }}
          password: ${{ secrets.TOKEN }}
      - uses: ./.github/actions/docker_push
        with:
          docker_image: ${{env.image_name}}:${{env.tag_name}}
          docker_username: ${{ secrets.USERNAME }}


  check_docker_images:
    runs-on: ubuntu-latest
    environment: ${{inputs.environment}}
    needs: build
    steps:
      - uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: ${{env.artifact_name}}
      - name: Load docker image
        run: docker load -i ${{env.image_name}}.tar
      - name: List all the docker images
        run: docker image ls
